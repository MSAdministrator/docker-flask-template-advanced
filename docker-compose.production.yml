version: "3.7"

volumes:
  mongodbdata:
    driver: local
  flaskdata:
    driver: local
  nginxdata:
    driver: local
  workerdata:
    driver: local

services:
  webserver:
    image: linuxserver/swag
    container_name: webserver
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=2000
      - PGID=2000
      - TZ=${TIMEZONE}
      - SUBDOMAINS=${SUBDOMAIN}
      - VALIDATION=http
      - EMAIL=${EMAIL}
      - STAGING=true
    volumes:
      - ./swag/nginx/site-confs/default:/config/nginx/site-confs/default
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped
    networks:
      - frontend
    depends_on: 
      - flask
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    environment: 
      MONGODB_HOST: mongo
      MONGODB_DB: ${MONGODB_DB}
      MONGODB_PORT: 27017
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    ports:
     - "7777:7777"
    depends_on:
      - redis
      - mongo
    networks:
      - frontend
      - backend
    volumes: 
      - flaskdata:/var/www
  worker:
    build:
      context: .
      dockerfile: Dockerfile-worker
    hostname: worker
    environment: 
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
    command: celery -A lophius.blueprints.search.tasks worker -B -l info 
    depends_on:
      - redis
    networks:
      - backend
    volumes: 
      - workerdata:/app
  monitor:
    build:
      context: .
      dockerfile: Dockerfile-worker
    hostname: monitor
    environment: 
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
    ports:
     - "5555:5555"
    entrypoint: celery
    command:  -A lophius.blueprints.search.tasks --broker=redis://redis:6379/0 flower --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - backend
  redis:
    image: redis
    container_name: redis
    networks:
      - backend
  mongo:
    image: mongo
    restart: always
    volumes:
      - ./.docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./.docker/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
      - ./.docker/mongodb/data/db/:/data/db/
      - ./.docker/mongodb/data/log/:/var/log/mongodb/
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_REPLICA_SET_NAME: rs0
    command: ["-f", "/etc/mongod.conf"]
    ports:
      - "27017-27019:27017-27019"
    networks:
      - backend


networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge